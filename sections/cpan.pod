=head1 The CPAN

Z<cpan>

Perl is a pragmatic language, and the availability of tens of thousands of
freely reusable Perl libraries demonstrates that pragmatism. If you have a
problem to solve, chances are the global Perl community has already
written--and shared--code to solve it.

X<CPAN>

Modern Perl programming makes heavy use of the CPAN (U<http://www.cpan.org/>).
The Comprehensive Perl Archive Network is an uploading and mirroring system for
redistributable, reusable Perl code. It's one of--if not I<the>--largest
archives of libraries of code in the world. The CPAN offers libraries for
everything from database access to profiling tools to protocols for almost
every network device ever created to sound and graphics libraries and wrappers
for shared libraries on your system.

Modern Perl without the CPAN is just another language. Modern Perl with the
CPAN is a powerful toolkit for solving problems.

X<distribution>
X<modules>

CPAN mirrors I<distributions>, or collections of reusable Perl code. A single
distribution can contain one or more I<modules>, or self-contained libraries of
Perl code. Each distribution occupies its own CPAN namespace and provides
unique metadata.

=begin tip The CPAN is Big, Really Big

The CPAN I<adds> hundreds of registered contributors and thousands of indexed
modules in hundreds of distributions every month. Those numbers do not take
into account updates. In January 2014, search.cpan.org reported 11021
uploaders, 129039 modules, and 29068 distributions (representing growth rates
of 15.1%, 21.2%, and 18.1% since the previous edition of this book,
respectively).

=end tip

X<search.cpan.org>
X<metacpan.org>

The CPAN itself is merely a mirroring service. Authors upload distributions
which get sent to various mirror sites from which CPAN clients download,
configure, build, test, and install them. This simplicity has served Perl well,
by enabling the contributions of thousands of volunteers. In particular,
community standards have evolved to identify the attributes and characteristics
of well-formed CPAN distributions. These include:

=over 4

=item * the behavior of automated CPAN installers

=item * metadata to describe what each distribution provides and expects

=item * machine-readable documentation and licensing

=back

Additional CPAN services provide comprehensive automated testing and reporting
to improve the quality of packaging and correctness across platforms and Perl
versions. Every CPAN distribution has its own ticket queue on
U<http://rt.cpan.org/> for reporting bugs and working with authors. CPAN sites
also link to previous distribution versions, module ratings, documentation
annotations, and more. All of this is available from both
U<http://search.cpan.org/> and U<http://metacpan.org/>.

X<CPAN; C<CPAN.pm>>

Modern Perl installations include a client to connect to, search, download,
build, test, and install CPAN distributions; this is I<CPAN.pm>.  With a recent
version (as of this writing, 2.0 is the latest stable release), module
installation is reasonably easy. Start the client with:

=begin screen

    $ B<cpan>

=end screen

To install a distribution within the client:

=begin screen

    $ B<cpan>
    cpan[1]> B<install Modern::Perl>

=end screen

... or to install directly from the command line:

=begin screen

    $ B<cpan Modern::Perl>

=end screen

X<CPAN; C<CPAN.pm>>

Eric Wilhelm's tutorial on configuring
CPAN.pmN<U<http://learnperl.scratchcomputing.com/tutorials/configuration/>>
includes a great troubleshooting section.

=begin sidebar

Even though the CPAN client is a core module for the Perl distribution, you
will likely need to install standard development tools such as a C<make>
utility and possibly a C compiler. Windows users, see Strawberry Perl
(U<http://strawberryperl.com/>) and Strawberry Perl Professional. Mac OS X
users must install XCode. Unix and Unix-like users often have these tools
available (though Debian and Ubuntu users should install C<build-essential>).

=end sidebar

=head2 CPAN Management Tools

If your operating system provides its own Perl installation, that version may
be out of date or it may have its own dependencies on specific versions of CPAN
distributions. Serious Perl developers often construct virtual walls between
the system Perl and their development Perl installations. Several projects help
to make this possible.

C<App::cpanminus> is a newer CPAN client with goals of speed, simplicity, and
zero configuration. Install it with C<cpan App::cpanminus>, or:

=begin screen

    $ B<curl -LO http://xrl.us/cpanm>
    $ B<less cpanm> # review the code before running
    $ B<chmod +x cpanm>
    $ B<./cpanm>

=end screen

C<App::perlbrew> is a system to manage and to switch between your own
installations of multiple versions and configurations of Perl. Installation is
as easy as:

=begin screen

    $ B<curl -LO http://xrl.us/perlbrew>
    $ B<less perlbrew> # review the code before running
    $ B<chmod +x perlbrew>
    $ B<./perlbrew install>
    $ B<perldoc App::perlbrew>

=end screen

X<CPAN; local::lib>
X<CPAN; App::local::lib::helper>

The C<local::lib> CPAN distribution allows you to install and to manage
distributions in your own user directory, rather than for the system as a
whole. This is an effective way to maintain CPAN distributions for individual
users without affecting the system as a whole.  Installation is somewhat more
involved than the previous two distributions, though C<App::local::lib::helper>
can simplify the process.  See U<https://metacpan.org/pod/local::lib> and
U<https://metacpan.org/pod/App::local::lib::helper> for more details.

All three projects tend to assume a Unix-like environment (such
as a GNU/Linux distribution or even Mac OS X). Windows users, see the Padre
all-in-one download (U<http://padre.perlide.org/download.html>).
