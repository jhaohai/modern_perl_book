=encoding utf-8

=head0 前言

I<Modern Perl> 是对最高效的 Perl 程序员的工作方式的一种描述。他们使用惯用语。他们充分利用 CPAN。他们的程序带有明显的 “Perl 的味道”，他们对书写强大、可维护、可扩展、简洁、高效的代码有着的良好品味、精湛的技巧。当然，你也可以学到这个本领！

Perl 最初作为一个简单的系统管理工具出现在1987年。虽然它起初作为 shell 脚本和 C 编程之间的一种折衷，但如今它已经发展成为一个强大的，通用的语言家族。Perl 拥有坚实的实用主义历史和光明的不断发展的未来。

在 Perl 的悠久历史--尤其是 19 年的 Perl 5--我们对于什么是优秀的 Perl 程序的理解发生了改变。尽管你可以不利用语言提供的任何便利写出生产性的程序，但是整个 Perl 社区有着发明、借鉴、增强、完美的观念并且提供给任何愿意学习它们的人们。

=head1 运行 Modern Perl

来自 CPAN (L<cpan>) 的 C<Modern::Perl> 模块会让 Perl 警告含糊不清的结构以及书写，并且启用现代的 Perl 版本中引入的新的特性。除非另作说明，每一处代码片段总是假设如下基本程序框架：

=begin programlisting

    #!/usr/bin/env perl

    use Modern::Perl '2013';
    use autodie;

=end programlisting

。。。等效于

=begin programlisting

#!/usr/bin/env perl

    use 5.016;      # 意味着 "use strict;"
    use warnings;
    use autodie;

=end programlisting

有些示例使用了诸如 C<ok()>, C<like()>, 及 C<is()> (L<testing>) 等试验性函数，这些程序可遵循以下模式：

=begin programlisting

    #!/usr/bin/env perl

    use Modern::Perl;
    B<use Test::More;>

    # 这里是示例代码

    B<done_testing();>

=end programlisting

在写作本书时，当前稳定的 Perl 版本是 Perl 5.18。如果你使用的更早些的版本，对于书中的某些示例你可能需要更改才能运行。本书中的示例能完好运行在 Perl 5.14.0 以及更新的版本上，但是我们推荐至少使用 Perl 5.16。尽管所谓的 “Modern Perl” 指的是 Perl 5.10.1 及以更新版本，但是又很多后来新加的特性是现代开发中必不可少的。

X<Strawberry Perl>
X<ActivePerl>
X<perlbrew>
X<CPAN; C<App::perlbrew>>

如果你还没有安装 Perl（或者安装的版本过于陈旧），你可以自己安装一个更新的版本。对于 Windows 用户，可以从 U<http://www.strawberryperl.com/> 下载 Strawberry Perl 或者从 U<http://www.activestate.com/activeperl> 下载 ActivePerl。其他已经预装 Perl（和 C 编译器以及其他开发工具）的操作系统的用户可以安装 CPAN 模块 C<App::perlbrew>N<安装指南参见 U<http://search.cpan.org/perldoc?App::perlbrew>。>。

C<perlbrew> 允许你同时安装管理多个版本的 Perl。这允许你可以在多个版本间自由切换，将 Perl 和 CPAN 安装到你的主目录并且不影响系统自带的 Perl。如果你曾经有过向你的系统管理员请求安装软件权限的经历，那么你就知道这会简单许多。

=head1 编者

如果没有很多人的疑问、评论、建议、忠告、知识、鼓励，也就不会有这本书。作者特别感谢：

L<credits>

如仍有错误都是愚蠢的作者的错。
